/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
$s-cart-name: 's-cart';
$s-cart-x: 0px;
$s-cart-y: 47px;
$s-cart-offset-x: 0px;
$s-cart-offset-y: -47px;
$s-cart-width: 30px;
$s-cart-height: 30px;
$s-cart-total-width: 222px;
$s-cart-total-height: 77px;
$s-cart-image: '../img/png-sprite.png';
$s-cart: (0px, 47px, 0px, -47px, 30px, 30px, 222px, 77px, '../img/png-sprite.png', 's-cart', );
$s-logotype-name: 's-logotype';
$s-logotype-x: 0px;
$s-logotype-y: 0px;
$s-logotype-offset-x: 0px;
$s-logotype-offset-y: 0px;
$s-logotype-width: 222px;
$s-logotype-height: 47px;
$s-logotype-total-width: 222px;
$s-logotype-total-height: 77px;
$s-logotype-image: '../img/png-sprite.png';
$s-logotype: (0px, 0px, 0px, 0px, 222px, 47px, 222px, 77px, '../img/png-sprite.png', 's-logotype', );
$s-mail-name: 's-mail';
$s-mail-x: 109px;
$s-mail-y: 47px;
$s-mail-offset-x: -109px;
$s-mail-offset-y: -47px;
$s-mail-width: 21px;
$s-mail-height: 13px;
$s-mail-total-width: 222px;
$s-mail-total-height: 77px;
$s-mail-image: '../img/png-sprite.png';
$s-mail: (109px, 47px, -109px, -47px, 21px, 13px, 222px, 77px, '../img/png-sprite.png', 's-mail', );
$s-search-name: 's-search';
$s-search-x: 86px;
$s-search-y: 47px;
$s-search-offset-x: -86px;
$s-search-offset-y: -47px;
$s-search-width: 23px;
$s-search-height: 18px;
$s-search-total-width: 222px;
$s-search-total-height: 77px;
$s-search-image: '../img/png-sprite.png';
$s-search: (86px, 47px, -86px, -47px, 23px, 18px, 222px, 77px, '../img/png-sprite.png', 's-search', );
$s-services-icon-name: 's-services-icon';
$s-services-icon-x: 60px;
$s-services-icon-y: 47px;
$s-services-icon-offset-x: -60px;
$s-services-icon-offset-y: -47px;
$s-services-icon-width: 26px;
$s-services-icon-height: 26px;
$s-services-icon-total-width: 222px;
$s-services-icon-total-height: 77px;
$s-services-icon-image: '../img/png-sprite.png';
$s-services-icon: (60px, 47px, -60px, -47px, 26px, 26px, 222px, 77px, '../img/png-sprite.png', 's-services-icon', );
$s-stock-icon-name: 's-stock-icon';
$s-stock-icon-x: 30px;
$s-stock-icon-y: 47px;
$s-stock-icon-offset-x: -30px;
$s-stock-icon-offset-y: -47px;
$s-stock-icon-width: 30px;
$s-stock-icon-height: 30px;
$s-stock-icon-total-width: 222px;
$s-stock-icon-total-height: 77px;
$s-stock-icon-image: '../img/png-sprite.png';
$s-stock-icon: (30px, 47px, -30px, -47px, 30px, 30px, 222px, 77px, '../img/png-sprite.png', 's-stock-icon', );
$spritesheet-width: 222px;
$spritesheet-height: 77px;
$spritesheet-image: '../img/png-sprite.png';
$spritesheet-sprites: ($s-cart, $s-logotype, $s-mail, $s-search, $s-services-icon, $s-stock-icon, );
$spritesheet: (222px, 77px, '../img/png-sprite.png', $spritesheet-sprites, );

/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
